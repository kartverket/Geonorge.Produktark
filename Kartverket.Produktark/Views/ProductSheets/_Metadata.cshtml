@model Kartverket.Produktark.Models.ProductSheet
@Html.HiddenFor(m => m.KeywordsPlace)
<div class="form-group required has-feedback">
    @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group required has-feedback">
    @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.Description, 5, 100, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
</div>


<div class="form-group">
    @Html.LabelFor(model => model.SupplementalDescription, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.SupplementalDescription, 5, 100, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SupplementalDescription, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Purpose, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.Purpose, 5, 100, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.SpecificUsage, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.SpecificUsage, 5, 100, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SpecificUsage, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.UseLimitations, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.UseLimitations, 5, 100, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.UseLimitations, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ResolutionScale, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ResolutionScale, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ResolutionScale, "", new { @class = "text-danger" })
    </div>
</div>
<!-- keywords -->

<div class="form-group">
    @Html.LabelFor(model => model.ProcessHistory, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.ProcessHistory, 5, 100, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProcessHistory, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.MaintenanceFrequency, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("MaintenanceFrequency", ViewBag.MaintenanceFrequencyValues as SelectList, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.MaintenanceFrequency, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DistributionFormats, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.DistributionFormats, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DistributionFormats, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.AccessConstraints, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.AccessConstraints, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AccessConstraints, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.UseConstraintsLicenseLink, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.UseConstraintsLicenseLink, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UseConstraintsLicenseLink, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.UseConstraintsLicenseLinkText, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.UseConstraintsLicenseLinkText, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UseConstraintsLicenseLinkText, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.LegendDescriptionUrl, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.LegendDescriptionUrl, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.LegendDescriptionUrl, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ProductPageUrl, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ProductPageUrl, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductPageUrl, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ProductSpecificationUrl, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.ProductSpecificationUrl, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductSpecificationUrl, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Thumbnail, new { @class = "control-label col-md-2" })
    <div class="col-sm-9">
        @Html.TextBoxFor(model => model.Thumbnail, new { @class = "form-control" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.CoverageArea, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <input type="text" name="CoverageArea" id="CoverageArea" value="@Html.Raw(Model.CoverageArea)" class="form-control" />
        @Html.ValidationMessageFor(model => model.CoverageArea, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Projections, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.Projections, 5, 100, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Projections, "", new { @class = "text-danger" })
    </div>
</div>

<fieldset>
    <legend>Metadatakontakt</legend>
    <div class="form-group">
        @Html.LabelFor(model => model.ContactMetadata.Name, new { @class = "control-label col-md-2" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.ContactMetadata.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group required has-feedback">
        @Html.LabelFor(model => model.ContactMetadata.Email, new { @class = "control-label col-md-2" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.ContactMetadata.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContactMetadata.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group required has-feedback">
        @Html.LabelFor(model => model.ContactMetadata.Organization, new { @class = "control-label col-md-2" })
        <div class="col-sm-9">
            @Html.TextBoxFor(model => model.ContactMetadata.Organization, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContactMetadata.Organization, "", new { @class = "text-danger" })
        </div>
    </div>
</fieldset>

<fieldset>
    <legend>Teknisk kontakt</legend>
    <div class="form-group">
        @Html.LabelFor(model => model.ContactPublisher.Name, new { @class = "control-label col-md-2" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.ContactPublisher.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group required has-feedback">
        @Html.LabelFor(model => model.ContactPublisher.Email, new { @class = "control-label col-md-2" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.ContactPublisher.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContactPublisher.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group required has-feedback">
        @Html.LabelFor(model => model.ContactPublisher.Organization, new { @class = "control-label col-md-2" })
        <div class="col-sm-9">
            @Html.TextBoxFor(model => model.ContactPublisher.Organization, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContactPublisher.Organization, "", new { @class = "text-danger" })
        </div>
    </div>
</fieldset>

<fieldset>
    <legend>Faglig kontakt</legend>
    <div class="form-group">
        @Html.LabelFor(model => model.ContactOwner.Name, new { @class = "control-label col-md-2" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.ContactOwner.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group required has-feedback">
        @Html.LabelFor(model => model.ContactOwner.Email, new { @class = "control-label col-md-2" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.ContactOwner.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContactOwner.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group required has-feedback">
        @Html.LabelFor(model => model.ContactOwner.Organization, new { @class = "control-label col-md-2" })
        <div class="col-sm-9">
            @Html.TextBoxFor(model => model.ContactOwner.Organization, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContactOwner.Organization, "", new { @class = "text-danger" })
        </div>
    </div>
</fieldset>
@*@{if (Model.Id != 0) {
    <div class="form-group text-right">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Hent metadata på nytt" name="hentNyeMetaData" class="btn btn-primary" />
        </div>
    </div>
      }
    }*@